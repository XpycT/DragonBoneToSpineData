<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.

 @see spark.components.Button

 @langversion 3.0
 @playerversion Flash 10
 @playerversion AIR 1.5
 @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="30" minHeight="25"
                   alpha.disabled="0.5">

  <fx:Metadata>
        <![CDATA[
    /**
     * @copy spark.skins.spark.ApplicationSkin#hostComponent
     */
    [HostComponent("spark.components.Button")]
    ]]>
    </fx:Metadata>

  <fx:Script fb:purpose="styling">
        <![CDATA[
    /* Define the skin elements that should not be colorized.
     For button, the graphics are colorized but the label is not. */
    static private const exclusions:Array = ["labelDisplay"];

    /**
     * @private
     */
    override public function get colorizeExclusions():Array {
      return exclusions;
    }

    /**
     * @private
     */
    override protected function initializationComplete():void {
      useChromeColor = true;
      super.initializationComplete();
    }

    /**
     *  @private
     */
    override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
      var cr:Number = getStyle("cornerRadius");

      if (cornerRadius != cr) {
        cornerRadius = cr;
        fill.radiusX = cornerRadius;
        border.radiusX = cornerRadius;
      }

      super.updateDisplayList(unscaledWidth, unscaledHeight);
    }

    private var cornerRadius:Number = 2;
    ]]>
    </fx:Script>

  <!-- states -->
  <s:states>
    <s:State name="up" />
    <s:State name="over" />
    <s:State name="down" />
    <s:State name="disabled" />
  </s:states>


  <!-- layer 2: fill -->
  <!--- @private -->
  <s:Rect id="fill" left="1" right="1" top="1" bottom="1" radiusX="2">
    <s:fill>
        <s:LinearGradient rotation="90">
            <s:GradientEntry color="0x505557"
                             color.down="0x414141"
                    />
            <s:GradientEntry color="0x414141"
                             color.over="#505557"
                             color.down="0x414141"
                    />
        </s:LinearGradient>
    </s:fill>
  </s:Rect>

  <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
  <!--- @private -->
  <s:Rect id="border" left="0" right="0" top="0" bottom="0" width="69" height="20" radiusX="2" radiusY="2">
    <s:stroke>
      <s:SolidColorStroke color="0x59595a" />
    </s:stroke>
  </s:Rect>

  <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
  <!--- @private -->
  <s:Rect id="border2" left="1" right="1" top="1" bottom="1" width="69" height="20" radiusX="2" radiusY="2">
    <s:stroke>
        <s:SolidColorStroke color="#0" alpha="0.6" />
    </s:stroke>
  </s:Rect>

  <!-- layer 8: text -->
  <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
  <s:Label id="labelDisplay"
           textAlign="center"
           maxDisplayedLines="1"
           horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
           left="20" right="20" top="5" bottom="5">
  </s:Label>

</s:SparkButtonSkin>